name: build-images

on:
  schedule:
    - cron: '10 4 * * 0' # Sundays at 4:10am
  push:
    branches:
      - main

jobs:
  build-stable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          install: true
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build images
        run: |
          latest=8.3.0
          for version in "7.9.3" "8.3.0"; do
            docker build \
              --build-arg LMS_CHANNEL=stable \
              --build-arg LMS_VERSION="${version}" \
              --tag syphr/logitechmediaserver:"${version}" \
              $(if [ "${version}" = "${latest}" ]; then echo "--tag syphr/logitechmediaserver:latest"; fi) \
              --platform linux/amd64,linux/arm64,linux/arm/v7 \
              --push \
              .
          done
      - name: Cleanup
        run: rm -f ${HOME}/.docker/config.json
  build-beta:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          install: true
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build images
        run: |
          for version in "8.4.0"; do
            docker build \
              --build-arg BASE_TAG=bullseye-slim \
              --build-arg LMS_CHANNEL=beta \
              --build-arg LMS_VERSION="${version}" \
              --tag syphr/logitechmediaserver:"${version}-beta" \
              --platform linux/amd64,linux/arm64,linux/arm/v7 \
              --push \
              .
          done
      - name: Cleanup
        run: rm -f ${HOME}/.docker/config.json
